---11/16/21---
-total width = right border + right padding + specified width + left padding + left border
-total height = top border + top padding + specified height + bottom padding + bottom border
-box-sizing: border-box just uses the specified width or height, rather than adding padding
-block-level boxes = elements formatted as blocks; 100% parents width; vertically one after another
    -display: block, flex, list-item
-inline-boxes = content is distributed in lines, occupies only content space, no line breaks, no height or width, padding and margin only horizontal
    -display: inline
-inline-block = box mode-model, no line break, mix of inline and block
    -display: inline-block
-BEM
    -Block ELement Modifier
    -BLOCK = standalone component that is meaningful on its own
    -ELEMENT = part of block that has no standalone meaning
    -MODIFIER = a different version of a block or element
        -.block {}
        -.block__element {}
        -.block__element--modifier {}

-7-1 PATTERN
    -7 different folders for partial SASS files and 1 main SASS file to import all other files into a compiled CSS stylesheet
        -base/
        -component/
        -layout/
        -pages/
        -themes/
        -abstracts/
        -vendors/
-SASS
    --a CSS preprocessor, an extension of CSS that adds power and elegance to a basic language 
    -variables
    -nesting
    -operators
    -partials and imports
    -mixins
    -functions
    -extends
    -control directives

---11/21/21---
Basic responsive design
-fluid layouts
    -allow pages to adapt to viewport
    -use % unit instead of px for elements that adapt to viewport use max-width instead of width
-responsive units
    -use rem instead of px for most lengths
    to make it easy to scale the entire layout down automatically
-flexible images
    -by default, images don't scale automatically as wwe change the viewport, need to flexible
    -always use % for image dimensions, together with the max-width property
-media queries
    -to change CSS styles on certain viewport widths (called breakpoints)

layout types
-float layouts
    -"the old way of building layouts" of all sizes, using CSS property
-flexbox
    -"modern way" of laying out elements in a 1-dimensional row without using floats. perfect for component layouts
-css grid
    -for laying out element in a fully-fledged 2 dimensional grid. perfect for page layouts and complex components


11/23/21
-highlight tags to make debugging faster and efficient
-calc()
    -math operation and mix units
-&rarr; is and arrow
-define imgs in % for responsive design

11/24/21
-if using a -webkit, also declare -moz

-if defining position: absolute; in a child..
    -you have to give a position: relative; in the parent
    -you also have to define top: left: and width:
-&nbsp;
    -stands for non breaking space

-unsplash.com for free images
-semantic vs non semantic
    -semantic   
        -elements that have a meaning
    -non semantic 
        -section
        -header, etc
-clip path breaks in google chrome

12/18/21
-